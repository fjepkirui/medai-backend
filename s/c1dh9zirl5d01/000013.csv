"0","##Quiz 3"
"0","#extract country from location column in user dataset"
"0","User$Country <- trimws(gsub("",$"", """", sapply(strsplit(User$Location, "", ""), function(x) tail(x, 1))))"
"0",""
"0","# Merge User data with RatingPGA and RatingPGB by User-ID"
"0","User_PGA <- merge(rating_pgA, User, by = ""User.ID"")"
"0","User_PGB <- merge(rating_pgB, User, by = ""User.ID"")"
"0",""
"0","# average book rating by country for RatingPGA and RatingPGB"
"0","avg_rating_pgA <- aggregate(Book.Rating ~ Country, data = User_PGA, FUN = mean, na.rm = TRUE)"
"0","avg_rating_pgB <- aggregate(Book.Rating ~ Country, data = User_PGB, FUN = mean, na.rm = TRUE)"
"0",""
"0","#combining average book rating for both datasets"
"0","df_rating <- merge(avg_rating_pgA, avg_rating_pgB, by = ""Country"", all = TRUE)"
"0","colnames(df_rating) <- c(""Country"", ""Average Rating (PGA)"", ""Average Rating (PGB)"")"
"0",""
"0","#removing non-country entries"
"0","invalid_entries <- c(""unknown"", """", ""n/a"", ""everywhere and anywhere"", ""antarctica"", ""nebr"",""quit"",""galida"")"
"0","df_rating <- df_rating[!(df_rating$Country %in% invalid_entries), ]"
"0",""
"0","df_rating <- df_rating[order(-df_rating$`Average Rating (PGA)`), ]#sorting in descending order"
"0","df_final <- df_rating[complete.cases(df_rating), ]#removing rows with missing values"
"0",""
"0","#tabulating average book rating per country"
"0","kable(head(df_final, 5), "
"0","      col.names = c(""Country"", ""Average Rating (PGA)"", ""Average Rating (PGB)""), "
"0","      caption = ""Top 5 Countries by Combined Average Book Ratings (PGA vs PGB)"") %>%"
"0","  kable_styling(full_width = FALSE, bootstrap_options = c(""striped"", ""hover"", ""condensed""))"
